///////////////////////////////////////////////////////////////////////////////
// RobotArmCPPServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_RobotArmCPP = 0x3F000000;
#define SRVNAME_ROBOTARMCPP "RobotArmCPP"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_RobotArmCPPCRobotArmMain = {0x27f5ff18,0x2fce,0x4487,{0xac,0xbf,0xa2,0x2e,0xb3,0x75,0x75,0x5b}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_RobotArmMainParameter = 0x00000001;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
typedef struct _RobotArmMainParameter
{
	ULONG data1;
	ULONG data2;
	double data3;
} RobotArmMainParameter, *PRobotArmMainParameter;

#pragma pack(push,1)
typedef struct _RobotArmMainInputs
{
} RobotArmMainInputs, *PRobotArmMainInputs;
#pragma pack(pop)

typedef struct _RobotArmMainOutputs
{
	SHORT ElbowOutM1;
	SHORT ElbowOutM2;
} RobotArmMainOutputs, *PRobotArmMainOutputs;

#pragma pack(push,1)
typedef struct _RobotArmMainPlcToCpp
{
	double PosLevelShift;
	double PosRotate;
	double Timer;
	bool ShoudlerInitFinish;
	double ElbowAngle;
	bool PlcStarted;
	bool LevelShiftExtEnabled;
} RobotArmMainPlcToCpp, *PRobotArmMainPlcToCpp;
#pragma pack(pop)

typedef struct _RobotArmMainCppToPlc
{
	double TarPosLevelShift;
	double ElbowTarAngle;
	double ElbowAngle;
} RobotArmMainCppToPlc, *PRobotArmMainCppToPlc;

///</AutoGeneratedContent>



///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_RobotArmMainInputs 0
#define ADI_RobotArmMainOutputs 1
#define ADI_RobotArmMainPlcToCpp 2
#define ADI_RobotArmMainCppToPlc 3
///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
///</AutoGeneratedContent>

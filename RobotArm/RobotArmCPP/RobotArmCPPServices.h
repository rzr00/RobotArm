///////////////////////////////////////////////////////////////////////////////
// RobotArmCPPServices.h

#pragma once

#include "TcServices.h"

const ULONG DrvID_RobotArmCPP = 0x3F000000;
#define SRVNAME_ROBOTARMCPP "RobotArmCPP"

///<AutoGeneratedContent id="ClassIDs">
const CTCID CID_RobotArmCPPCRobotArmMain = {0x1392ff5c,0x890d,0x4d06,{0x80,0x2b,0xd0,0x7b,0xef,0xf9,0x3e,0x9c}};
///</AutoGeneratedContent>

///<AutoGeneratedContent id="ParameterIDs">
const PTCID PID_RobotArmMainParameter = 0x00000001;
///</AutoGeneratedContent>

///<AutoGeneratedContent id="DataTypes">
#if !defined(_TC_TYPE_C04A2A0C_C567_4688_A5BA_A713A4D7E6D8_INCLUDED_)
#define _TC_TYPE_C04A2A0C_C567_4688_A5BA_A713A4D7E6D8_INCLUDED_
typedef PVOID OSHDLCS;
#endif // !defined(_TC_TYPE_C04A2A0C_C567_4688_A5BA_A713A4D7E6D8_INCLUDED_)

typedef struct _RobotArmMainParameter
{
	ULONG data1;
	ULONG data2;
	double data3;
} RobotArmMainParameter, *PRobotArmMainParameter;

#pragma pack(push,1)
typedef struct _RobotArmMainInputs
{
	float wrist_resistor;
	double wrist_angle;
	SHORT hand_one_temp;
	SHORT hand_two_temp;
	SHORT hand_three_temp;
	SHORT hand_four_temp;
} RobotArmMainInputs, *PRobotArmMainInputs;
#pragma pack(pop)

typedef struct _RobotArmMainOutputs
{
	SHORT ElbowOutM1;
	SHORT ElbowOutM2;
	SHORT wrist_one;
	SHORT wrist_two;
	SHORT wrist_three;
	SHORT wrist_four;
	SHORT wrist_five;
	SHORT wrist_six;
	SHORT wrist_seven;
	SHORT wrist_eight;
	SHORT hand_one;
	SHORT hand_two;
	SHORT hand_three;
	SHORT hand_four;
	SHORT hand_fan;
} RobotArmMainOutputs, *PRobotArmMainOutputs;

#pragma pack(push,1)
typedef struct _RobotArmMainPlcToCpp
{
	double PosLevelShift;
	double PosRotate;
	double Timer;
	bool ShoudlerInitFinish;
	double ElbowAngle;
	bool PlcStarted;
	bool LevelShiftExtEnabled;
	bool RotateExtEnabled;
	bool StopElbow;
	bool StopWrist;
	bool StopHand;
	SHORT ChooseAction;
	bool IsRepeat;
} RobotArmMainPlcToCpp, *PRobotArmMainPlcToCpp;
#pragma pack(pop)

#pragma pack(push,1)
typedef struct _RobotArmMainCppToPlc
{
	double TarPosLevelShift;
	double TarPosRotate;
	double ElbowTarAngle;
	double ElbowAngle;
	double wrist_angle;
	double wrist_pwm;
	double wrist_error;
	SHORT hand_one_temp;
	SHORT hand_two_temp;
	SHORT hand_three_temp;
	SHORT hand_four_temp;
	SHORT hand_one_pwm;
	SHORT hand_three_pwm;
	SHORT hand_four_pwm;
	SHORT hand_two_pwm;
	double wrist_tarAngle;
	SHORT ErrorCode;
} RobotArmMainCppToPlc, *PRobotArmMainCppToPlc;
#pragma pack(pop)

///</AutoGeneratedContent>



///<AutoGeneratedContent id="DataAreaIDs">
#define ADI_RobotArmMainInputs 0
#define ADI_RobotArmMainOutputs 1
#define ADI_RobotArmMainPlcToCpp 2
#define ADI_RobotArmMainCppToPlc 3
///</AutoGeneratedContent>

///<AutoGeneratedContent id="InterfaceIDs">
///</AutoGeneratedContent>

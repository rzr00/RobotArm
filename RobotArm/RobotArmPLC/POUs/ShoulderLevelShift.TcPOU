<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.38">
  <POU Name="ShoulderLevelShift" Id="{bd49b112-7644-47fc-aa7c-e265237affc9}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM ShoulderLevelShift
VAR
	MC_ExtSetPointGenDisableLevelShift: MC_ExtSetPointGenDisable;		//外部给定运动禁止
	MC_ExtSetPointGenEnableLevelShift: MC_ExtSetPointGenEnable;			//外部给定运动使能
	
	//TODO: C++将目标角度转换为目标位置
	TarPosLevelShift AT%I* : LREAL := 0;								//平移目标位置，C++给定
	ErrPosLevelShift: LREAL := 0;										//目标角度和实际角度误差
	
	StatusLevelShift: INT := 0;											//状态变量
	
	test : LREAL := 0;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[//肩关节水平移动自由度

//电机外部给定运动模块参数设置
MC_ExtSetPointGenDisableLevelShift(
	Axis:= AxisLevelShift, );
	
MC_ExtSetPointGenEnableLevelShift(
	Axis:= AxisLevelShift, );

CASE StatusLevelShift OF
	0:	//判断是否完成初始化
		IF InitFinish THEN
			StatusLevelShift := 1;
		END_IF
	1:	//外部给定模块使能给低电平
		MC_ExtSetPointGenEnableLevelShift.Execute := FALSE;
		MC_ExtSetPointGenDisableLevelShift.Execute := FALSE;
		StatusLevelShift := 2;
	2:
		MC_ExtSetPointGenEnableLevelShift.Execute := TRUE;
		IF MC_ExtSetPointGenEnableLevelShift.Enabled THEN
			StatusLevelShift := 3;
			ExtEnabledLevelShift := TRUE;
		END_IF
	3:	//判断目标移动是否有问题
		//Timer := Timer + 0.01;
		IF TarPosLevelShift > 25 OR TarPosLevelShift < -15 THEN
			ErrorCode := 1001;
			ErrorTime := Timer;
			StatusLevelShift := 4;						//跳转到错误处理状态
		END_IF
		ErrPosLevelShift := TarPosLevelShift - AxisLevelShift.NcToPlc.ActPos;//误差:目标角度减去实际角度
		IF ABS(ErrPosLevelShift) < 1E-8 THEN			//移动距离过小认为不移动
			//不移动
		ELSIF ABS(ErrPosLevelShift) > 0.15 THEN
			//安全保护。单次移动距离过大，即移动速度过快，停止运动。
			//|maxV| = 15 mm/s; |maxv| = 0.15 mm / 0.01s;
			ErrorCode := 1002;
			ErrorTime := Timer;
			ErrorTarPosLevelShift := TarPosLevelShift;
			StatusLevelShift := 4;						//跳转到错误处理状态
		ELSE											//按照给定移动
			IF MC_ExtSetPointGenEnableLevelShift.Enabled THEN
				MC_ExtSetPointGenFeed(
					//Position:= Timer,		//给定位置
					Position:= TarPosLevelShift,		//给定位置
					Velocity:= 0, 						//速度和加速度可设为0，让plc自己计算
					Acceleration:= 0, 
					Direction:= 1, 
					Axis:= AxisLevelShift);
			END_IF
		END_IF
	4:	//Error处理
		MC_ExtSetPointGenEnableLevelShift.Execute := FALSE;	//关闭外部位置给定
		MC_ExtSetPointGenDisableLevelShift.Execute := TRUE;
END_CASE]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>